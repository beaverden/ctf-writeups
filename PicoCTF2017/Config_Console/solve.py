#! /usr/bin/env python3
##
# Script for PicoCTF weirderRSA challenge
# Created by Amos (LFlare) Ng
##
import binascii
import gmpy2

# Default public key?
e = 65537
n = 479214344815234616169275872403114571800588809791954219478749997471449027103090748028598441809308993770628280516589240267975728236088672742542674509723847806931024785473525978010174632191865167555994103953610632216572777653090888209830841334172690032535980120172701508937207497563306389953456203619056509173099
c = 226249840966200420018632201046800821799444145106842023831705007803479256345849941718417620827426248469382496277063256913566442957126934784107302054325452169163731745395425927008105128939378421356971560196373311571436171343505725660529195560082473936065366464896753494285301933447297381748897666282031221072698

# Interesting dp
dp = 3671826710923785894042307198705580408711298706223310710769787794538594461666729898757191061623518848922708435494536805475372462211905846378898413132841623 

# Random R
r = 123456

# n = pq
p = gmpy2.gcd(n, pow(r, (e*dp), n) - r)
q = gmpy2.div(n, p)
print("p: %d" % p)
print("q: %d" % q)

# calculate d
phi = (p-1) * (q-1)
d = gmpy2.invert(e, phi)
print("phi: %d" % phi)
print("d: %d" % d)

# Calculate message
m = int(pow(c, d, n))
print("m: %d" % m)

# Convert int message to string
mHex = format(m, 'x')
print(mHex)
message = binascii.unhexlify(mHex).decode("utf-8")
print(message)